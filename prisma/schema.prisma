// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  NickName String?
  bio String?
  email String @unique
  emailVerified DateTime?
  image String?
  converImage String?
  profileImage String?
  hashedPassword String?
  createAt DateTime @default(now())
  updateAt DateTime @updatedAt
  followingIds String[] @db.ObjectId
  hasNotification Boolean?

  posts Post[]
  comments Comment[]
  notifications Notification[]
}

model Post {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  body String
  createAt DateTime @default(now())
  updateAt DateTime @updatedAt
  userId String @db.ObjectId
  likeIds String[] @db.ObjectId

  user User @relation( fields : [userId], references: [id], onDelete : Cascade)
  comments Comment[]
}

model Comment{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  body String
  createAt DateTime @default(now())
  updateAt DateTime @updatedAt
  userId String @db.ObjectId
  PostId String @db.ObjectId

  user User @relation(fields : [userId], references: [id], onDelete : Cascade)
  Post Post @relation(fields : [PostId], references: [id], onDelete : Cascade)
}

model Notification {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  body String
  createAt DateTime @default(now())
  userId String @db.ObjectId

  user User @relation(fields : [userId], references: [id], onDelete : Cascade)
}